Layouts con Blade

Se integrara un diseño de Bootstrap cpn Laravel con Blade evitando repeticion de codigo en las vistas.

 Es necesario un diseño.

 Se utilizara uno de la pagina de boostrap

 https://getbootstrap.com/

 Pudiendose utilizar otro FRameworks CSS 

 Se integrara el diseño con Blade

 Los diseños de boostrap estan el pagina inicial

 Escogiendo el diseño:

 https://getbootstrap.com/docs/4.1/examples/sticky-footer-navbar/

 Click derecho 

 Ver codigo fuente y coparse el codigo

 Antes de intentar integrar el ejemplo con Laravel se copia en el directorio publico de mi proyecto en:

 /public/paginaBootstrap.html

 El archivo hac repferencia a scripts de JS que son relativos al ejemplo, Se intentara utilizar el CDN para no necesitar copiar todos estos archivos 

 Regresando a la pagina de ejemplos

 Para ello vamos a la parte de documentación 

 Y ahi estaran llas url 

 https://getbootstrap.com/docs/4.1/getting-started/introduction/

 y en la sección CSS estaran las etiquetas y rutas que utilizan el CDN

 y demas diseños o url adicionales de CSS desde la vista ver codigo fuente hacemos click en la url de cada uno de los enlaces

 Ej.

 https://getbootstrap.com/docs/4.1/examples/sticky-footer-navbar/sticky-footer-navbar.css

 Ciopiamos y en el directorio public:

 /public/css/

 se Crea un archivo llamado style.css y de vuelta a Bootstrap indicamos la ruta del archivo del CSS

 /public/css/style.css

 <link href="css/style.css" rel="stylesheet">

 Continuamos con los archivos del CDN para copiar los archivos de JS

 Nuevamente en la pagina de introduccion de Bootstrap y entonces copiamos las etiquetas script y sustituimos las de la parti inferior que utlizan el CDN y se pegan en esta sección.



 <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>


Se incluye jQuery y dos archivos adicionales de JS

Al parecer eso es todo, en el favicon podemos utilizar la rutal del favicon que se tienen el mismo en la carpeta public 

De vuelyta en la paestaña del proyecto abrimos el archivo de Bootstrap:

yvamoa agregando el codigio. 

Ahora ya tenemos el diseño que se podra integrar a nuestro proyecto.

http://127.0.0.1:8000/bootstrap.html


Se copia la primera parte hasta el header y la apertura de la etiqueta main dentro de un archivo en:

resources/views/header.blade.php


y el cierre de la etiqueta main junto con el footer dentro de un archivo

resources/views/footer.blade.php

Ahora debemso incluir estas plantillas con el contenido

Hecho esto ahora podremos ir al archivo

/resources/views/users.blade.php

Sustituyendo a partir del body

Con la directiva @include agregamos nuestra plantilla con nuestro contenido quedando sin la extension del archivo:


@include('header')
	<h1>{{ $title }}</h1>
	<hr>
	<ul>
		@forelse ($users as $user) 
			<li>{{ $user }}</li>
		@empty
			<li>No hay Usuarios Registrados.</li>
		@endforelse
		</ul>

		{{ time() }}
	
</body>
</html>  


Para el footer hacemos exactamente los mismo

@include('header')

	<h1>{{ $title }}</h1>
	<hr>
	<ul>
		@forelse ($users as $user) 
			<li>{{ $user }}</li>
		@empty
			<li>No hay Usuarios Registrados.</li>
		@endforelse
		</ul>

		{{ time() }}
	
@include('footer')


Con esto regreso al navegador y verificar los los cambios desde:


Aun asi no es la mejor manera de incluir el codigo html dentro de php, por que si queremos incluir in sidebar, o barra lateral ej.

@include('header')

	<div class="row mt-3">
		<div class="col-8">
			<h1>{{ $title }}</h1>
				<hr>
				<ul>
					@forelse ($users as $user) 
						<li>{{ $user }}</li>
					@empty
						<li>No hay Usuarios Registrados.</li>
					@endforelse
					</ul>

		</div>
		<div class="col-4">
			<h2>
				Barra lateral
			</h2>
		</div>
	</div>

@include('footer')



Agregamos otra vista y modificamos el controladore user controller en el methodo show

al cambiar las rutas relativas no se muestra correctamente, por ello utilizamos un helper de Laravel el cual dara una ruta absoluta a este archivo CSS que es del footer

<link href="{{ asset('css/style.css') }}" rel="stylesheet">

Asi Laravel pone el dominio al inicio de la ruta y de esta manera ya no tendremos probeama con las rutas del aarchivo dependiendo de la posicion independientemente desde donde nos encontremos

Con esta tecnica terminamos utilizando varios archivos.

header.blade.php
footer.blade.php
sedebar.blade.php

user-show,blade.php

Pero se ha repetido el diseño en varios archivos con el mismo contenido lo cual dupica el trabajo

en las vistas duplicamos partes de las capas del diseño base y si despues cambiamos algo en un archivo tendremos que cambiar el diseño entre vistas y tendremos que cambiar vista por vista, esto es lo que hay que evitar.


Blade provee un mecanismo para trabajar mejor con los diseños, en este caso en lugar de separar en varios archivos pequeños vamos a crear un solo archivo 

layout.blade.php

Ahi incluimos el header y el footer y en la seccion de contenido utilizamos la directiva

@yield con el nombre de la seccion de contenido como argumento

y de vuelta a users.blade.php

y en luhar de inlcuir el header y footer

indicamos a laravel o a blade que esta vista va a a extender de layout

@extends('layout')

con el nombre de layout nos referimos al layout.blade.php

solo que no incluimos la extension y directorios que son relativos a la carpeta de view 

Falta indicar el nombre de la directiva content que se indicara como seccion de contenido y cerrarla como si se tratara de una etiqueta

De esta manera indicao que la vista user.blade.php va a extender de layout, pero va a definir la seccion de contenido


Con esto header y footer ya no son necesarios por que estan condensados ya en un solo archivo, 


en layout.blade.php

header
...
 <main role="main" class="container">
		
		<div class="row mt-3">
		<div class="col-8">
			
			@yield('content')

		</div>
		<div class="col-4">
			<h2>
				@include('sidebar')
		</div>
	</div>
	
    </main>
..
footer


y en users.blade.php

@extends('layout')

@section('content')
	<h1>{{ $title }}</h1>

	<ul>
		@forelse ($users as $user)
			<li>{{ $user }}</li>
		@empty
			<li>No hay Usuarios registrados.</li>
		@endforelse
	</ul>
@endsection


Ya no mesclamos los div del diseño y aparte tenemos centralizado el codigo donde podemos camvbiar las vistas  

Si no queremos sobreescribir secciones podremos utilizar la directiva 

@parent para agregar contenido en lugar de sustituirlo

layout

<main role="main" class="container">
		
		<div class="row mt-3">
		<div class="col-8">
			
			@yield('content')

		</div>
		<div class="col-4">

				@section('sidebar')
					<h2>Barra lateral </h2>
				@show
		</div>
	</div>
	
    </main>


users layout
-------------------

@extends('layout')

@section('content')
	<h1>{{ $title }}</h1>

	<ul>
		@forelse ($users as $user)
			<li>{{ $user }}</li>
		@empty

			<li>No hay usuarios registrados.</li>
		
		@endforelse

	</ul>

@endsection

@section('sidebar')

	@parent
	

	<h2>Barra lateral personalizada!</h2>

@endsection	




Cambiando el codigo de users-show

cambiando de:

@include('header')

	<div class="row mt-3">
		<div class="col-8">
			<h1>Usuario # {{ $id }}</h1>

				<hr>
			
				Mostrando detalle del usuario: {{$id}}

		</div>
		<div class="col-4">
			<h2>
				@include('sidebar')
		</div>
	</div>

@include('footer')


quedando:


@extends('layout')

@section('content')
	<h1>Usuario # {{ $id }}</h1>

				<hr>
			
				Mostrando detalle del usuario: {{$id}}

@endsection

Con esto estendiendo de secciones es limpio, no incluye partes del diseño, y es muy facil de leer y entender y personalizar.

Al hacer esto podemos ver el resultado 

Teniendo todo listo en la plantilla unica, se pueden eliminar los archivos

header, footer, aside

Se puede agrupar los archivos dentro de una carpeta y renombrarlos tal como:

users/index.blade.php
users/layout.blade.php
users/show.blade.php

y en el contralador hacer referencia con:

return view('users.index', compact('users', 'title'));

y con

return view('users.show', compact('id'));

